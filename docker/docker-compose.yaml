version: "2.4"
services:
  portainer:
    container_name: portainer
    environment:
      - TZ=Asia/Shanghai
    hostname: portainer
    image: portainer/portainer:1.24.1
    mem_limit: 128m
    networks:
      network:
        ipv4_address: 192.168.159.2
    ports:
      - 9000:9000
    restart: always
    volumes:
      - ./portainer/data:/data
      - /var/run/docker.sock:/var/run/docker.sock

  mysql:
    cap_add:
      - SYS_NICE
    container_name: mysql
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - TZ=Asia/Shanghai
    hostname: mysql
    image: mysql:8.0.21
    mem_limit: 512m
    networks:
      network:
        ipv4_address: 192.168.159.3
    ports:
      - 3306:3306
    restart: always
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/my.cnf
      - ./mysql/initdb:/docker-entrypoint-initdb.d

  redis:
    command: redis-server --port 6379 --requirepass 123456 --appendonly yes
    container_name: redis
    environment:
      - TZ=Asia/Shanghai
    hostname: redis
    image: redis:6.0.8
    mem_limit: 128m
    networks:
      network:
        ipv4_address: 192.168.159.4
    ports:
      - 6379:6379
    restart: always
    volumes:
      - ./redis/data:/data

  nacos:
    container_name: nacos
    depends_on:
      - mysql
    env_file:
      - ./nacos/env/nacos-standlone-mysql.env
    environment:
      - TZ=Asia/Shanghai
    hostname: nacos
    image: nacos/nacos-server:1.3.2
    mem_limit: 1024m
    networks:
      network:
        ipv4_address: 192.168.159.5
    ports:
      - 8848:8848
      - 9555:9555
    restart: always
    volumes:
      - ./nacos/logs:/home/nacos/logs
      - ./nacos/init.d/custom.properties:/home/nacos/init.d/custom.properties

  seata:
    container_name: seata
    depends_on:
      - nacos
    environment:
      - TZ=Asia/Shanghai
      - SEATA_CONFIG_NAME=file:/root/seata-config/registry
    hostname: seata
    image: seataio/seata-server:1.3.0
    mem_limit: 512m
    networks:
      network:
        ipv4_address: 192.168.159.6
    ports:
      - 8091:8091
    restart: always
    volumes:
      - ./seata/seata-config:/root/seata-config

  sentinel:
    build: ./sentinel
    container_name: sentinel
    depends_on:
      - nacos
    environment:
      - TZ=Asia/Shanghai
    hostname: sentinel
    image: sentinel:1.8.0
    mem_limit: 512m
    networks:
      network:
        ipv4_address: 192.168.159.7
    ports:
      - 8719:8719
      - 8989:8989
    restart: always

  # 赋予rocketmq文件夹777权限
  namesrv:
    command: sh mqnamesrv
    container_name: namesrv
    environment:
      - TZ=Asia/Shanghai
    hostname: namesrv
    image: apacherocketmq/rocketmq:4.6.0
    mem_limit: 512m
    networks:
      network:
        ipv4_address: 192.168.159.8
    ports:
      - 9876:9876
    restart: always
    volumes:
      - ./rocketmq/namesrv/logs:/home/rocketmq/logs

  broker:
    command: sh mqbroker -n namesrv:9876 -c ../conf/broker.conf
    container_name: broker
    depends_on:
      - namesrv
    environment:
      - TZ=Asia/Shanghai
    hostname: broker
    image: apacherocketmq/rocketmq:4.6.0
    mem_limit: 1024m
    networks:
      network:
        ipv4_address: 192.168.159.9
    ports:
      - 10909:10909
      - 10911:10911
      - 10912:10912
    restart: always
    volumes:
      - ./rocketmq/broker/logs:/home/rocketmq/logs
      - ./rocketmq/broker/store:/home/rocketmq/store
      - ./rocketmq/broker/conf/broker.conf:/home/rocketmq/rocketmq-4.6.0/conf/broker.conf

  console:
    container_name: console
    depends_on:
      - namesrv
    environment:
      - TZ=Asia/Shanghai
      - JAVA_OPTS=-Drocketmq.namesrv.addr=namesrv:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false
    hostname: console
    image: styletang/rocketmq-console-ng:1.0.0
    mem_limit: 512m
    networks:
      network:
        ipv4_address: 192.168.159.10
    ports:
      - 8088:8080
    restart: always

networks:
  network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.159.0/24
    name: network
